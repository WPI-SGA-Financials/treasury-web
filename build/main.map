{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./server/api.js","webpack:///./server/config/db.js","webpack:///./server/main.js","webpack:///./server/routes/budgets.js","webpack:///./server/routes/fundingRequests.js","webpack:///./server/routes/reallocations.js","webpack:///./server/routes/studentLifeFee.js","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"localtunnel\"","webpack:///external \"morgan\"","webpack:///external \"mysql\"","webpack:///external \"parcel-bundler\"","webpack:///external \"swagger-jsdoc\"","webpack:///external \"swagger-ui-express\""],"names":["router","require","Router","use","module","exports","dotenv","credentials","config","path","mysql","error","console","log","parsed","connection","createConnection","host","process","env","DB_HOST","user","DB_USER","password","DB_PASSWORD","database","DB_NAME","connect","express","app","swaggerUi","swaggerJSDoc","morgan","options","definition","info","title","version","description","basePath","apis","swaggerSpec","serve","setup","PORT","staticHandler","static","IS_DEV","Bundler","bundler","hmr","middleware","localtunnel","tunnel","port","subdomain","LT_SUB","undefined","url","on","listen","get","req","res","sqlQuery","content","Object","entries","query","length","first","key","value","err","results","send"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","var router = require('express').Router()\r\n\r\n// Functions to run on all API paths (if any)\r\n// TODO \r\n\r\n// Set up different routes\r\nrouter.use('/budgets', require('./routes/budgets'))\r\nrouter.use('/fundingRequests', require('./routes/fundingRequests'))\r\n// router.use('/lineItems', require('./routes/lineItems'))\r\n// router.use('/minutes', require('./routes/minutes'))\r\nrouter.use('/reallocations', require('./routes/reallocations'))\r\nrouter.use('/studentLifeFee', require('./routes/studentLifeFee'))\r\n\r\n// Export router for app to use\r\nmodule.exports = router","const dotenv = require('dotenv')\r\nconst credentials = dotenv.config({path: './server/.env'})\r\nconst mysql = require('mysql')\r\n\r\n// Load credentials and make connection to database\r\n// TODO may need to move .env file or point config to it\r\nif(credentials.error) {throw credentials.error}\r\nconsole.log('Parsed:', credentials.parsed)\r\nvar connection = mysql.createConnection({\r\n    host    : process.env.DB_HOST,\r\n    user    : process.env.DB_USER,\r\n    password : process.env.DB_PASSWORD,\r\n    database : process.env.DB_NAME,\r\n})\r\n\r\nconnection.connect()\r\n\r\n// TODO Make function for handlind disconnects\r\n\r\n// Export connection for use by API\r\nmodule.exports = connection","const express = require('express');\r\nconst app = express();\r\nconst swaggerUi = require('swagger-ui-express');\r\nconst swaggerJSDoc = require('swagger-jsdoc');\r\nconst morgan = require('morgan');\r\n\r\nconst options = {\r\n    definition: {\r\n      info: {\r\n        title: 'Treasury API',\r\n        version: '1.0.0',\r\n        description: 'API to expose WPI SGA Financial Data'\r\n      },\r\n      basePath: '/api',\r\n    },\r\n    // Path to the API docs\r\n    apis: ['server/api.js', 'server/routes/*.js'],\r\n};\r\n\r\nconst swaggerSpec = swaggerJSDoc(options);\r\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec));\r\napp.use(morgan('dev'));\r\n\r\n// Config\r\nconst PORT = process.env.PORT || 8000;\r\n\r\n// REST API\r\napp.use('/api', require('./api'));\r\n\r\n// Serve frontend\r\nlet staticHandler = express.static(\"dist\");\r\n\r\nif(process.env.IS_DEV) {\r\n    console.log(\"Starting Parcel dev server...\")\r\n    // If dev, use Parcel for HMR\r\n    const Bundler = require('parcel-bundler');\r\n    const bundler = new Bundler('client/index.html', {\r\n        hmr: false, // HMR does not work with HTTPS (thanks, MSAL)\r\n    });\r\n    staticHandler = bundler.middleware();\r\n\r\n    // We need a localtunnel for SSO to work, since MSAL uses PKCE which doesn't work via localhost\r\n    console.log(\"Starting dev https tunnel...\")\r\n    const localtunnel = require('localtunnel');\r\n\r\n    (async () => {\r\n      const tunnel = await localtunnel({ \r\n          port: PORT, \r\n          subdomain: process.env.LT_SUB || undefined \r\n        });\r\n\r\n      console.log(\"\\nLocaltunnel active at URL: \" + tunnel.url);\r\n\r\n      tunnel.on('close', () => {\r\n        console.log(\"https tunnel closed\")\r\n      });\r\n    })();\r\n}\r\n\r\napp.use(\"/\", staticHandler);\r\n\r\n// Start the server\r\napp.listen(PORT, () => {\r\n    console.log(`App listening on port ${PORT}`);\r\n    console.log(`If running in development mode, use parcel server port instead`);\r\n    console.log(\"Press Ctrl+C to quit.\");\r\n});","var connection = require('../config/db')\r\nvar router = require('express').Router()\r\n\r\n/**\r\n * @swagger\r\n * \r\n * /budgets:\r\n *   get:\r\n *     tags:\r\n *     - users\r\n *     summary: Returns specified list of budgets\r\n *     operationId: getBudgets\r\n *     description: |\r\n *       Returns a list of budgets based on the query provided\r\n *       If fields of selection are empty, returns all for that field\r\n *     produces:\r\n *     - application/json\r\n *     parameters:\r\n *     - in: query\r\n *       name: selection\r\n *       description: pass an optional search string \r\n *       required: false\r\n *       type: string\r\n *     responses:\r\n *       200:\r\n *         description: search results matching criteria\r\n *         schema:\r\n *           type: array\r\n *           items:\r\n *             $ref: '#/definitions/Budget'\r\n *       400:\r\n *         description: bad input parameter\r\n */\r\nrouter.get('/', (req, res) => {\r\n    var sqlQuery = 'SELECT * FROM Budget'\r\n    var content\r\n\r\n    // Check for query\r\n    if(Object.entries(req.query).length != 0) {\r\n        sqlQuery += ' WHERE'\r\n        var first = true\r\n        // Add each query param to sqlQuery string\r\n        for(const [key, value] of Object.entries(req.query)) {\r\n            if(!first) {sqlQuery += ' AND'}\r\n            sqlQuery += ' `' + key + '`=\"' + value + '\"'\r\n            first = false\r\n        }\r\n        console.log('Finished:', sqlQuery)\r\n    }\r\n\r\n    // Obtain data from db\r\n    connection.query(sqlQuery, (err, results) => {\r\n        if (err) console.error(err)\r\n        console.log('Sent:', sqlQuery)\r\n        content = results\r\n        res.send(content)\r\n    })    \r\n})\r\n\r\n// Export router object for use in API\r\nmodule.exports = router","var connection = require('../config/db')\r\nvar router = require('express').Router()\r\n\r\n/**\r\n * @swagger\r\n * \r\n * /fundingRequests:\r\n *   get:\r\n *     tags:\r\n *     - users\r\n *     summary: Returns specified list of funding requests\r\n *     operationId: getFRs\r\n *     description: |\r\n *       Returns a list of funding requests based on the query provided\r\n *       If fields of selection are empty, returns all for that field\r\n *     produces:\r\n *     - application/json\r\n *     parameters:\r\n *     - in: query\r\n *       name: selection\r\n *       description: pass an optional search string \r\n *       required: false\r\n *       type: string\r\n *     responses:\r\n *       200:\r\n *         description: search results matching criteria\r\n *         schema:\r\n *           type: array\r\n *           items:\r\n *             $ref: '#/definitions/FundingRequest'\r\n *       400:\r\n *         description: bad input parameter\r\n */\r\nrouter.get('/', (req, res) => {\r\n    var sqlQuery = 'SELECT * FROM `Funding Requests`'\r\n    var content\r\n\r\n    // Check for query\r\n    if(Object.entries(req.query).length != 0) {\r\n        sqlQuery += ' WHERE'\r\n        var first = true\r\n        // Add each query param to sqlQuery string\r\n        for(const [key, value] of Object.entries(req.query)) {\r\n            if(!first) {sqlQuery += ' AND'}\r\n            sqlQuery += ' `' + key + '`=\"' + value + '\"'\r\n            first = false\r\n        }\r\n        console.log('Finished:', sqlQuery)\r\n    }\r\n\r\n    // Obtain data from db\r\n    connection.query(sqlQuery, (err, results) => {\r\n        if (err) console.error(err)\r\n        console.log('Sent:', sqlQuery)\r\n        content = results\r\n        res.send(content)\r\n    })    \r\n})\r\n\r\n// Export router object for use in API\r\nmodule.exports = router","var connection = require('../config/db')\r\nvar router = require('express').Router()\r\n\r\n/**\r\n * @swagger\r\n * \r\n * /reallocations:\r\n *   get:\r\n *     tags:\r\n *     - users\r\n *     summary: Returns specified list of reallocations\r\n *     operationId: getReallocs\r\n *     description: |\r\n *       Returns a list of reallocations based on the query provided\r\n *       If fields of selection are empty, returns all for that field\r\n *     parameters:\r\n *     - in: query\r\n *       name: selection\r\n *       description: pass an optional search string \r\n *       required: false\r\n *       type: string\r\n *     produces:\r\n *     - application/json\r\n *     responses:\r\n *       200:\r\n *         description: search results matching criteria\r\n *         schema:\r\n *           type: array\r\n *           items:\r\n *             $ref: '#/definitions/Reallocation'\r\n *       400:\r\n *         description: bad input parameter\r\n */\r\nrouter.get('/', (req, res) => {\r\n    var sqlQuery = 'SELECT * FROM Reallocations'\r\n    var content\r\n\r\n    // Check for query\r\n    if(Object.entries(req.query).length != 0) {\r\n        sqlQuery += ' WHERE'\r\n        var first = true\r\n        // Add each query param to sqlQuery string\r\n        for(const [key, value] of Object.entries(req.query)) {\r\n            if(!first) {sqlQuery += ' AND'}\r\n            sqlQuery += ' `' + key + '`=\"' + value + '\"'\r\n            first = false\r\n        }\r\n        console.log('Finished:', sqlQuery)\r\n    }\r\n\r\n    // Obtain data from db\r\n    connection.query(sqlQuery, (err, results) => {\r\n        if (err) console.error(err)\r\n        console.log('Sent:', sqlQuery)\r\n        content = results\r\n        res.send(content)\r\n    })    \r\n})\r\n\r\n// Export router object for use in API\r\nmodule.exports = router","var connection = require('../config/db')\r\nvar router = require('express').Router()\r\n\r\n/**\r\n * @swagger\r\n * \r\n * /studentLifeFee:\r\n *   get:\r\n *     tags:\r\n *       - users\r\n *     summary: Returns data about the student life fee\r\n *     operationId: getLifeFees\r\n *     description: |\r\n *       Returns data about the student life fee over the course of it's history\r\n *       Automatically returns all available entries\r\n *     produces:\r\n *     - application/json\r\n *     responses:\r\n *       200:\r\n *         description: student life fee records\r\n *         schema:\r\n *           type: array\r\n *           items:\r\n *             $ref: '#/definitions/LifeFee'\r\n */\r\nrouter.get('/', (req, res) => {\r\n    var sqlQuery = 'SELECT * FROM `Student Life Fee`'\r\n    var content\r\n\r\n    // Check for query\r\n    if(Object.entries(req.query).length != 0) {\r\n        sqlQuery += ' WHERE'\r\n        var first = true\r\n        // Add each query param to sqlQuery string\r\n        for(const [key, value] of Object.entries(req.query)) {\r\n            if(!first) {sqlQuery += ' AND'}\r\n            sqlQuery += ' `' + key + '`=\"' + value + '\"'\r\n            first = false\r\n        }\r\n        console.log('Finished:', sqlQuery)\r\n    }\r\n\r\n    // Obtain data from db\r\n    connection.query(sqlQuery, (err, results) => {\r\n        if (err) console.error(err)\r\n        console.log('Sent:', sqlQuery)\r\n        content = results\r\n        res.send(content)\r\n    })    \r\n})\r\n\r\n// Export router object for use in API\r\nmodule.exports = router","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"localtunnel\");","module.exports = require(\"morgan\");","module.exports = require(\"mysql\");","module.exports = require(\"parcel-bundler\");","module.exports = require(\"swagger-jsdoc\");","module.exports = require(\"swagger-ui-express\");"],"sourceRoot":""}